(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{"2wZp":function(e,t,n){"use strict";var i=n("Mlra");n.n(i).a},"6Rdq":function(e,t,n){"use strict";var i=n("9Q3x"),a=n("yMep"),r=n("c4kp"),o=n("2QtR"),s=n("L2JU"),d=n("xCqy");function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var f={name:"FilesView",components:{DesktopSortingAndPreview:i.a,DesktopToolbar:a.a,FileBrowser:r.a,ContextMenu:o.a},computed:function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({},Object(s.b)(["config"])),methods:{contextMenu:function(e,t){d.a.$emit("contextMenu:show",e,t)}}},p=(n("2wZp"),n("KHd+")),u=Object(p.a)(f,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{attrs:{id:"files-view"},on:{"!contextmenu":function(t){return t.preventDefault(),e.contextMenu(t,void 0)}}},[n("ContextMenu"),e._v(" "),n("DesktopSortingAndPreview"),e._v(" "),n("DesktopToolbar"),e._v(" "),n("FileBrowser")],1)}),[],!1,null,null,null);t.a=u.exports},"8KKK":function(e,t,n){"use strict";n.r(t);var i=n("Nv84"),a=n("CjXH"),r=n("L2JU");function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var d={name:"UpgradeSidebarBanner",components:{HardDriveIcon:a.A,ButtonBase:i.a},computed:function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({},Object(r.b)(["config"]),{storage:function(){return this.$store.getters.user.relationships.storage.data.attributes}})},l=(n("cxp3"),n("KHd+")),c=Object(l.a)(d,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"upgrade-banner"},[n("div",{staticClass:"header-title"},[n("hard-drive-icon",{staticClass:"icon",attrs:{size:"19"}}),e._v(" "),n("span",{staticClass:"title"},[e._v(e._s(e.storage.used)+"% From "+e._s(e.storage.capacity_formatted))])],1),e._v(" "),n("div",{staticClass:"content"},[e.storage.used>95?n("p",{staticClass:"reach-capacity"},[e._v(e._s(e.$t("upgrade_banner.title")))]):n("p",{staticClass:"reach-capacity"},[e._v(e._s(e.$t("upgrade_banner.description")))])]),e._v(" "),e.config.app_payments_active?n("div",{staticClass:"footer"},[n("router-link",{staticClass:"button",attrs:{to:{name:"UpgradePlan"}}},[e._v("\n            "+e._s(e.$t("upgrade_banner.button"))+"\n        ")])],1):e._e()])}),[],!1,null,"02ff20f8",null).exports,f=n("FdzE"),p=n("N7DK"),u=n("6Rdq"),v=n("LtV2"),h=n("hXay"),g=n("xCqy");function m(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function b(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var y={name:"FilesView",components:{UpgradeSidebarBanner:c,TreeMenuNavigator:f.a,ContentFileView:u.a,MultiSelected:p.a,ContentSidebar:v.a,UploadCloudIcon:a.cb,ContentGroup:h.a,FolderIcon:a.x,Trash2Icon:a.Z,HomeIcon:a.B,XIcon:a.hb},computed:function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?m(Object(n),!0).forEach((function(t){b(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):m(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({},Object(r.b)(["user","homeDirectory","currentFolder","config","fileInfoDetail"]),{favourites:function(){return this.user.data.relationships.favourites.data.attributes.folders},tree:function(){return this.user.data.attributes.folders},storage:function(){return this.$store.getters.user.data.attributes.storage}}),data:function(){return{area:!1,draggedItem:void 0}},methods:{getTrash:function(){this.$store.dispatch("getTrash")},getLatest:function(){this.$store.dispatch("getLatest")},goHome:function(){this.$store.dispatch("getFolder",[{folder:this.homeDirectory,back:!1,init:!0}])},openFolder:function(e){this.$store.dispatch("getFolder",[{folder:e,back:!1,init:!1}])},dragEnter:function(){this.draggedItem&&"folder"!==this.draggedItem.type||this.fileInfoDetail.length>0&&this.fileInfoDetail.find((function(e){return"folder"!==e.type}))||(this.area=!0)},dragLeave:function(){this.area=!1},dragFinish:function(){var e=this;this.area=!1,g.a.$emit("drop"),this.draggedItem&&"folder"!==this.draggedItem.type||this.favourites.find((function(t){return t.id==e.draggedItem.id}))||this.fileInfoDetail.length>0&&this.fileInfoDetail.find((function(e){return"folder"!==e.type}))||(this.fileInfoDetail.includes(this.draggedItem)||this.$store.dispatch("addToFavourites",this.draggedItem),this.fileInfoDetail.includes(this.draggedItem)&&this.$store.dispatch("addToFavourites",null))},removeFavourite:function(e){this.$store.dispatch("removeFromFavourites",e)}},created:function(){var e=this;this.goHome(),g.a.$on("dragstart",(function(t){e.draggedItem=t,e.dragInProgress=!0})),g.a.$on("drop",(function(){e.dragInProgress=!1}))}},x=(n("kiSZ"),Object(l.a)(y,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return e.user?n("section",{attrs:{id:"viewport"}},[n("ContentSidebar",[e.config.storageLimit&&e.storage.used>95?n("ContentGroup",[n("UpgradeSidebarBanner")],1):e._e(),e._v(" "),n("ContentGroup",{attrs:{title:e.$t("sidebar.locations_title")}},[n("div",{staticClass:"menu-list-wrapper vertical"},[n("a",{staticClass:"menu-list-item link",class:{"is-active":e.$isThisLocation(["base"])},on:{click:e.goHome}},[n("div",{staticClass:"icon text-theme"},[n("home-icon",{attrs:{size:"17"}})],1),e._v(" "),n("div",{staticClass:"label text-theme"},[e._v("\n                        "+e._s(e.$t("sidebar.home"))+"\n                    ")])]),e._v(" "),n("a",{staticClass:"menu-list-item link",class:{"is-active":e.$isThisLocation(["latest"])},on:{click:e.getLatest}},[n("div",{staticClass:"icon text-theme"},[n("upload-cloud-icon",{attrs:{size:"17"}})],1),e._v(" "),n("div",{staticClass:"label text-theme"},[e._v("\n                        "+e._s(e.$t("sidebar.latest"))+"\n                    ")])]),e._v(" "),n("a",{staticClass:"menu-list-item link",class:{"is-active":e.$isThisLocation(["trash","trash-root"])},on:{click:e.getTrash}},[n("div",{staticClass:"icon text-theme"},[n("trash2-icon",{attrs:{size:"17"}})],1),e._v(" "),n("div",{staticClass:"label text-theme"},[e._v("\n                        "+e._s(e.$t("locations.trash"))+"\n                    ")])])])]),e._v(" "),n("ContentGroup",{staticClass:"navigator",attrs:{title:e.$t("sidebar.navigator_title"),slug:"navigator","can-collapse":!0}},[0==e.tree.length?n("span",{staticClass:"empty-note navigator"},[e._v("\n                "+e._s(e.$t("sidebar.folders_empty"))+"\n            ")]):e._e(),e._v(" "),e._l(e.tree,(function(e){return n("TreeMenuNavigator",{key:e.id,staticClass:"folder-tree",attrs:{depth:0,nodes:e}})}))],2),e._v(" "),n("ContentGroup",{attrs:{title:e.$t("sidebar.favourites"),slug:"favourites","can-collapse":!0}},[n("div",{staticClass:"menu-list-wrapper vertical favourites",class:{"is-dragenter":e.area},on:{dragover:function(t){return t.preventDefault(),e.dragEnter(t)},dragleave:e.dragLeave,drop:function(t){return e.dragFinish(t)}}},[n("transition-group",{staticClass:"menu-list",attrs:{tag:"div",name:"folder-item"}},[0==e.favourites.length?n("span",{key:0,staticClass:"empty-note favourites"},[e._v("\n                        "+e._s(e.$t("sidebar.favourites_empty"))+"\n                    ")]):e._e(),e._v(" "),e._l(e.favourites,(function(t){return n("a",{key:t.id,staticClass:"menu-list-item",class:{"is-current":t&&e.currentFolder&&e.currentFolder.id===t.id},on:{click:function(n){return n.stopPropagation(),e.openFolder(t)}}},[n("div",{staticClass:"text-theme"},[n("folder-icon",{staticClass:"folder-icon text-theme",attrs:{size:"17"}}),e._v(" "),n("span",{staticClass:"label text-theme"},[e._v(e._s(t.name))])],1),e._v(" "),n("x-icon",{staticClass:"delete-icon",attrs:{size:"17"},on:{click:function(n){return n.stopPropagation(),e.removeFavourite(t)}}})],1)}))],2)],1)])],1),e._v(" "),n("ContentFileView")],1):e._e()}),[],!1,null,"69e4f5b8",null));t.default=x.exports},DvOI:function(e,t,n){var i=n("kkeM");"string"==typeof i&&(i=[[e.i,i,""]]);var a={hmr:!0,transform:void 0,insertInto:void 0};n("aET+")(i,a);i.locals&&(e.exports=i.locals)},FdzE:function(e,t,n){"use strict";var i=n("CjXH"),a=n("L2JU"),r=n("xCqy");function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var d={name:"TreeMenuNavigator",props:["nodes","depth","disabled"],components:{TreeMenuNavigator:f,ChevronRightIcon:i.h,FolderIcon:i.x},computed:function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({},Object(a.b)(["fileInfoDetail"]),{disabledFolder:function(){var e=this,t=!1;return this.draggedItem.length>0?this.draggedItem.forEach((function(n){"folder"===n.type&&e.nodes.id===n.parent_id&&(t=!0),e.nodes.id===n.id&&"folder"===n.type&&(t=!0,e.disableChildren=!0),e.disabled&&(e.disableChildren=!0)})):(t=!1,this.disableChildren=!1),t},indent:function(){var e=window.innerWidth<=1024?17:22;return{paddingLeft:(0==this.depth?e:e+20*this.depth)+"px"}}}),data:function(){return{isVisible:!1,isSelected:!1,area:!1,draggedItem:[],disableChildren:!1}},methods:{dragFinish:function(){this.fileInfoDetail.includes(this.draggedItem[0])||this.$store.dispatch("moveItem",{to_item:this.nodes,noSelectedItem:this.draggedItem[0]}),this.fileInfoDetail.includes(this.draggedItem[0])&&this.$store.dispatch("moveItem",{to_item:this.nodes,noSelectedItem:null}),this.draggedItem=[],this.area=!1,r.a.$emit("drop")},dragEnter:function(){this.area=!0},dragLeave:function(){this.area=!1},getFolder:function(){r.a.$emit("show-folder",this.nodes),this.$isThisLocation("public")?this.$store.dispatch("browseShared",[{folder:this.nodes,back:!1,init:!1}]):this.$store.dispatch("getFolder",[{folder:this.nodes,back:!1,init:!1}])},showTree:function(){this.isVisible=!this.isVisible}},created:function(){var e=this;r.a.$on("drop",(function(){e.draggedItem=[]})),r.a.$on("dragstart",(function(t){e.fileInfoDetail.includes(t)||(e.draggedItem=[t]),e.fileInfoDetail.includes(t)&&(e.draggedItem=e.fileInfoDetail)})),r.a.$on("show-folder",(function(t){e.isSelected=!1,e.nodes.id==t.id&&(e.isSelected=!0)}))}},l=(n("WxZZ"),n("KHd+")),c=Object(l.a)(d,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("transition",{attrs:{name:"folder"}},[n("div",{staticClass:"folder-item-wrapper"},[n("div",{staticClass:"folder-item text-theme",class:{"is-selected":e.isSelected,"is-dragenter":e.area,"is-inactive":e.disabledFolder||e.disabled&&e.draggedItem.length>0},style:e.indent,on:{click:e.getFolder,dragover:function(t){return t.preventDefault(),e.dragEnter(t)},dragleave:e.dragLeave,drop:function(t){return e.dragFinish()}}},[n("chevron-right-icon",{staticClass:"icon-arrow",class:{"is-opened":e.isVisible,"is-visible":0!==e.nodes.folders.length},attrs:{size:"17"},on:{click:function(t){return t.stopPropagation(),e.showTree(t)}}}),e._v(" "),n("folder-icon",{staticClass:"icon text-theme",attrs:{size:"17"}}),e._v(" "),n("span",{staticClass:"label"},[e._v(e._s(e.nodes.name))])],1),e._v(" "),e._l(e.nodes.folders,(function(t){return e.isVisible?n("TreeMenuNavigator",{key:t.id,attrs:{disabled:e.disableChildren,depth:e.depth+1,nodes:t}}):e._e()}))],2)])}),[],!1,null,"92af20fe",null),f=t.a=c.exports},Iovz:function(e,t,n){(e.exports=n("I1BE")(!1)).push([e.i,".empty-note.navigator[data-v-69e4f5b8] {\n  padding: 5px 25px 10px;\n}\n.empty-note.favourites[data-v-69e4f5b8] {\n  padding: 5px 23px 10px;\n}\n.navigator[data-v-69e4f5b8] {\n  width: 100%;\n  overflow-x: auto;\n}\n@media only screen and (max-width: 1024px) {\n.empty-note.navigator[data-v-69e4f5b8] {\n    padding: 5px 20px 10px;\n}\n.empty-note.favourites[data-v-69e4f5b8] {\n    padding: 5px 18px 10px;\n}\n}\n.folder-item-move[data-v-69e4f5b8] {\n  transition: transform 300s ease;\n}\n.folder-item-enter-active[data-v-69e4f5b8] {\n  transition: all 300ms ease;\n}\n.folder-item-leave-active[data-v-69e4f5b8] {\n  transition: all 300ms;\n}\n.folder-item-enter[data-v-69e4f5b8], .folder-item-leave-to[data-v-69e4f5b8] {\n  opacity: 0;\n  transform: translateX(30px);\n}\n.folder-item-leave-active[data-v-69e4f5b8] {\n  position: absolute;\n}\n",""])},LUFV:function(e,t,n){(e.exports=n("I1BE")(!1)).push([e.i,".is-inactive[data-v-92af20fe] {\n  opacity: 0.5;\n  pointer-events: none;\n}\n.is-dragenter[data-v-92af20fe] {\n  border-radius: 8px;\n}\n.folder-item[data-v-92af20fe] {\n  display: block;\n  padding: 8px 0;\n  transition: 150ms all ease;\n  cursor: pointer;\n  position: relative;\n  white-space: nowrap;\n  width: 100%;\n  border: 2px dashed transparent;\n}\n.folder-item .icon[data-v-92af20fe] {\n  line-height: 0;\n  width: 15px;\n  margin-right: 9px;\n  vertical-align: middle;\n  margin-top: -1px;\n}\n.folder-item .icon path[data-v-92af20fe], .folder-item .icon line[data-v-92af20fe], .folder-item .icon polyline[data-v-92af20fe], .folder-item .icon rect[data-v-92af20fe], .folder-item .icon circle[data-v-92af20fe] {\n  transition: 150ms all ease;\n}\n.folder-item .icon-arrow[data-v-92af20fe] {\n  transition: 300ms all ease;\n  margin-right: 4px;\n  vertical-align: middle;\n  opacity: 0;\n}\n.folder-item .icon-arrow.is-visible[data-v-92af20fe] {\n  opacity: 1;\n}\n.folder-item .icon-arrow.is-opened[data-v-92af20fe] {\n  transform: rotate(90deg);\n}\n.folder-item .label[data-v-92af20fe] {\n  transition: 150ms all ease;\n  font-size: 0.8125em;\n  font-weight: 700;\n  vertical-align: middle;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: inline-block;\n  color: #1B2539;\n  max-width: 130px;\n}\n.folder-item:hover .icon path[data-v-92af20fe], .folder-item:hover .icon line[data-v-92af20fe], .folder-item:hover .icon polyline[data-v-92af20fe], .folder-item:hover .icon rect[data-v-92af20fe], .folder-item:hover .icon circle[data-v-92af20fe], .folder-item.is-selected .icon path[data-v-92af20fe], .folder-item.is-selected .icon line[data-v-92af20fe], .folder-item.is-selected .icon polyline[data-v-92af20fe], .folder-item.is-selected .icon rect[data-v-92af20fe], .folder-item.is-selected .icon circle[data-v-92af20fe] {\n  color: inherit;\n}\n.folder-item:hover .label[data-v-92af20fe], .folder-item.is-selected .label[data-v-92af20fe] {\n  color: inherit;\n}\n@media only screen and (max-width: 1024px) {\n.folder-item[data-v-92af20fe] {\n    padding: 8px 0;\n}\n}\n@media (prefers-color-scheme: dark) {\n.folder-item .label[data-v-92af20fe] {\n    color: #bec6cf;\n}\n}\n",""])},MRed:function(e,t,n){var i=n("LUFV");"string"==typeof i&&(i=[[e.i,i,""]]);var a={hmr:!0,transform:void 0,insertInto:void 0};n("aET+")(i,a);i.locals&&(e.exports=i.locals)},Mlra:function(e,t,n){var i=n("Q8SN");"string"==typeof i&&(i=[[e.i,i,""]]);var a={hmr:!0,transform:void 0,insertInto:void 0};n("aET+")(i,a);i.locals&&(e.exports=i.locals)},Q8SN:function(e,t,n){(e.exports=n("I1BE")(!1)).push([e.i,"#files-view {\n  font-family: 'Nunito', sans-serif;\n  font-size: 16px;\n  width: 100%;\n  height: 100%;\n  position: relative;\n  min-width: 320px;\n  overflow-x: hidden;\n  padding-left: 15px;\n  padding-right: 15px;\n  overflow-y: hidden;\n}\n@media only screen and (max-width: 690px) {\n#files-view {\n    padding-left: 0;\n    padding-right: 0;\n}\n}\n",""])},WxZZ:function(e,t,n){"use strict";var i=n("MRed");n.n(i).a},cxp3:function(e,t,n){"use strict";var i=n("DvOI");n.n(i).a},ij6Y:function(e,t,n){var i=n("Iovz");"string"==typeof i&&(i=[[e.i,i,""]]);var a={hmr:!0,transform:void 0,insertInto:void 0};n("aET+")(i,a);i.locals&&(e.exports=i.locals)},kiSZ:function(e,t,n){"use strict";var i=n("ij6Y");n.n(i).a},kkeM:function(e,t,n){(e.exports=n("I1BE")(!1)).push([e.i,".upgrade-banner[data-v-02ff20f8] {\n  background: rgba(253, 57, 122, 0.1);\n  padding: 10px;\n  border-radius: 6px;\n  margin: 0 16px;\n}\n.header-title[data-v-02ff20f8] {\n  margin-bottom: 12px;\n  display: flex;\n  align-items: center;\n}\n.header-title .icon[data-v-02ff20f8] {\n  margin-right: 10px;\n}\n.header-title .icon line[data-v-02ff20f8], .header-title .icon path[data-v-02ff20f8] {\n  stroke: #fd397a;\n}\n.header-title .title[data-v-02ff20f8] {\n  font-size: 0.8125em;\n  font-weight: 800;\n  color: #fd397a;\n}\n.content[data-v-02ff20f8] {\n  margin-bottom: 12px;\n}\n.content p[data-v-02ff20f8] {\n  font-size: 0.75em;\n  color: #fd397a;\n  font-weight: 700;\n}\n.button[data-v-02ff20f8] {\n  background: #fd397a;\n  border-radius: 50px;\n  padding: 6px 0;\n  width: 100%;\n  color: white;\n  text-align: center;\n  font-size: 0.75em;\n  font-weight: 700;\n  display: block;\n  box-shadow: 0 4px 10px rgba(253, 57, 122, 0.35);\n}\n",""])}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,